localhost {
	# =============================================
	# STATIC ASSETS
	# =============================================
	@static path /static/* /js/*
	handle @static {
		root * /usr/share/caddy
		file_server
	}

	# =============================================
	# API ROUTES WITH GENERAL RATE LIMITING
	# =============================================
	@api path /api/*
	handle @api {
		# General API: 60 requests/minute per IP
		rate_limit {
			zone api_zone {
				key {http.request.remote_ip}
				events 240
				window 1m
			}
		}
		reverse_proxy backend:3000
	}

	# =============================================
	# AUTHENTICATION ENDPOINTS WITH SPECIFIC LIMITS
	# =============================================

	# Login: 5 attempts/15 minutes per IP
	@login path /login
	handle @login {
		rate_limit {
			zone login_zone {
				key {http.request.remote_ip}
				events 25
				window 15m
			}
		}
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}
		}
	}

	# Register: 5 attempts/15 minutes per IP
	@register path /register
	handle @register {
		rate_limit {
			zone register_zone {
				key {http.request.remote_ip}
				events 25
				window 15m
			}
		}
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}
		}
	}

	# Password Reset: 3 requests/60 minutes per IP
	@password_reset path /request-reset /reset-password
	handle @password_reset {
		rate_limit {
			zone reset_zone {
				key {http.request.remote_ip}
				events 15
				window 60m
			}
		}
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}
		}
	}

	# =============================================
	# BUSINESS LOGIC ENDPOINTS
	# =============================================

	# Reservations: 3 requests/5 minutes per IP
	@reservations path /api/reservations/* /reserveform
	handle @reservations {
		rate_limit {
			zone reservation_zone {
				key {http.request.remote_ip}
				events 15
				window 5m
			}
		}
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}
		}
	}

	# Reviews: 5 requests/10 minutes per IP
	@reviews path /api/reviews/*
	handle @reviews {
		rate_limit {
			zone review_zone {
				key {http.request.remote_ip}
				events 25
				window 10m
			}
		}
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}
		}
	}

	# Exports: 10 requests/60 minutes per IP
	@exports path /api/export/* /api/admin/export/* /api/owner/export/*
	handle @exports {
		rate_limit {
			zone export_zone {
				key {http.request.remote_ip}
				events 20
				window 60m
			}
		}
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}
		}
	}

	# =============================================
	# ROOT REDIRECT
	# =============================================
	@root path /
	handle @root {
		root * /usr/share/caddy/public
		rewrite * /home.html
		file_server
	}

	# =============================================
	# DEFAULT HANDLER
	# =============================================
	handle {
		# First try public folder (login, register, search, etc.)
		root * /usr/share/caddy/public
		try_files {path}.html {path}
		file_server {
			pass_thru
		}

		# Then try html folder (admin, profile, dashboards)
		root * /usr/share/caddy/html
		try_files {path}.html {path}
		file_server {
			pass_thru
		}

		# Then try common folder (header, footer components)
		root * /usr/share/caddy/common
		try_files {path}.html {path}
		file_server {
			pass_thru
		}

		# Finally fallback to backend
		reverse_proxy backend:3000 {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote_host}

			# Security: Don't pass sensitive headers to backend
			header_up -X-Forwarded-Server
			header_up -X-Forwarded-Host

			# Timeout settings
			transport http {
				dial_timeout 5s
				response_header_timeout 10s
				expect_continue_timeout 1s
			}
		}

		# Security headers
	    header {
            Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
            X-Content-Type-Options "nosniff"
            X-Frame-Options "SAMEORIGIN"
            Cross-Origin-Embedder-Policy "require-corp"
            Cross-Origin-Opener-Policy "same-origin"
            Cross-Origin-Resource-Policy "same-origin"
            Referrer-Policy "strict-origin-when-cross-origin"
            Content-Security-Policy "default-src 'self'; script-src 'self' https://www.gstatic.com/recaptcha/ https://www.google.com/recaptcha/; script-src-elem 'self' https://www.gstatic.com/recaptcha/ https://www.google.com/recaptcha/; style-src 'self' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://www.google.com/recaptcha/; frame-src https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests; object-src 'none';"
            Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), xr-spatial-tracking=(), accelerometer=(), gyroscope=(), magnetometer=(), clipboard-read=(), clipboard-write=(), fullscreen=(self), picture-in-picture=()"
            X-Permitted-Cross-Domain-Policies "none"
            -Server
            -X-Powered-By
            -X-AspNet-Version
            -X-AspNetMvc-Version
        }
		# Sensitive paths - no caching
		header /api/* {
			Cache-Control "no-cache, no-store, must-revalidate"
			Pragma "no-cache"
			Expires "0"
		}

		header /admin/* {
			Cache-Control "no-cache, no-store, must-revalidate"
			Pragma "no-cache"
			Expires "0"
		}

		header /profile* {
			Cache-Control "no-cache, no-store, must-revalidate"
			Pragma "no-cache"
			Expires "0"
		}

		# Logout endpoint - clear site data
		header /logout* {
			Clear-Site-Data "cache,cookies,storage"
		}

		# Request body size limiting
		request_body {
			max_size 10MB
		}
	}
}