# Build stage - compile Caddy with plugins
FROM caddy:2-builder AS builder

# Build Caddy with Coraza WAF plugin
RUN xcaddy build \
    --with github.com/corazawaf/coraza-caddy/v2

# Production stage
FROM caddy:2-alpine AS production

# Install security updates and dumb-init
RUN apk add --no-cache dumb-init && \
    apk upgrade --no-cache

# Create non-root user for Caddy
RUN addgroup -g 1001 -S caddy-user && \
    adduser -S caddy-user -u 1001 -G caddy-user

# Copy compiled Caddy binary from builder stage
COPY --from=builder --chown=root:root /usr/bin/caddy /usr/bin/caddy

# Set proper permissions for Caddy binary
RUN chmod 755 /usr/bin/caddy

# Create necessary directories with proper ownership
RUN mkdir -p /etc/caddy /usr/share/caddy /data /config /var/log/caddy /var/log/waf && \
    chown -R caddy-user:caddy-user /etc/caddy /usr/share/caddy /data /config /var/log/caddy /var/log/waf

# Copy configuration files with proper ownership
COPY --chown=caddy-user:caddy-user Caddyfile /etc/caddy/Caddyfile
COPY --chown=caddy-user:caddy-user frontend/ /usr/share/caddy/
COPY --chown=caddy-user:caddy-user frontend/errors /usr/share/caddy/errors

# Set proper file permissions
RUN chmod 644 /etc/caddy/Caddyfile && \
    find /usr/share/caddy -type f -exec chmod 644 {} \; && \
    find /usr/share/caddy -type d -exec chmod 755 {} \;

# Switch to non-root user
USER caddy-user

# Expose ports
EXPOSE 80 443

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider --timeout=5 http://localhost:80/api/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start Caddy
CMD ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile"]